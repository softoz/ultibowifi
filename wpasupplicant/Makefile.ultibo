#
# Makefile
#

ULTIBOHOME = .

OBJS	= \
			wpa_supplicant/blacklist.o \
			wpa_supplicant/bss.o \
			wpa_supplicant/config.o \
			wpa_supplicant/events.o \
			wpa_supplicant/eap_register.o \
			wpa_supplicant/op_classes.o \
			wpa_supplicant/notify.o \
			wpa_supplicant/scan.o \
			wpa_supplicant/wpa_supplicant.o \
			wpa_supplicant/wpas_glue.o \
			wpa_supplicant/main_ultibo.o \
			wpa_supplicant/wmm_ac.o \
			wpa_supplicant/rrm.o \
			wpa_supplicant/config_file_ultibo.o
	  
OBJS2	= \
	  src/common/wpa_common.o \
	  src/common/ieee802_11_common.o \
	  src/common/hw_features_common.o \
	  src/crypto/aes-internal-dec.o \
	  src/crypto/aes-internal.o \
	  src/crypto/aes-unwrap.o \
	  src/crypto/md5-internal.o \
	  src/crypto/md5.o \
	  src/crypto/rc4.o \
	  src/crypto/random.o \
	  src/crypto/crypto_internal.o \
	  src/crypto/sha1-internal.o \
	  src/crypto/sha1-pbkdf2.o \
	  src/crypto/sha1-prf.o \
	  src/crypto/sha1.o \
	  src/crypto/tls_none.o \
	  src/drivers/drivers.o \
	  src/drivers/driver_common.o \
	  src/drivers/driver_ultibo.o \
	  src/eapol_supp/eapol_supp_sm.o \
	  src/eap_common/eap_common.o \
	  src/eap_peer/eap.o \
	  src/eap_peer/eap_methods.o \
	  src/l2_packet/l2_packet_ultibo.o \
	  src/rsn_supp/pmksa_cache.o \
	  src/rsn_supp/preauth.o \
	  src/rsn_supp/wpa.o \
	  src/rsn_supp/wpa_ie.o \
	  src/utils/bitfield.o \
	  src/utils/base64.o \
	  src/utils/common.o \
	  src/utils/eloop_ultibo.o \
	  src/utils/os_ultibo.o \
	  src/utils/wpa_debug.o \
	  src/utils/wpabuf.o


OBJS	+= $(OBJS2)

INCLUDE += \
	  -I src \
	  -I src/common \
	  -I src/crypto \
	  -I src/rsn_supp \
	  -I src/utils

DEFINE	+= -DCONFIG_DRIVER_ULTIBO -DIEEE8021X_EAPOL

EXTRACLEAN += $(OBJS2) $(OBJS2:.o=.d)

HOME ?= .

AARCH	 ?= 32
RASPPI	 ?= 3
PREFIX	 ?= arm-none-eabi-

# see: doc/stdlib-support.txt
STDLIB_SUPPORT ?= 1

FLOAT_ABI ?= hard

CC	= $(PREFIX)gcc
CPP	= $(PREFIX)g++
AS	= $(CC)
LD	= $(PREFIX)ld
AR	= $(PREFIX)ar


OPTIMIZE ?= -O2

DEFINE	+= -D__DYNAMIC_REENT__ -D__ultibo__ -DRASPPI=$(RASPPI) -DSTDLIB_SUPPORT=$(STDLIB_SUPPORT) \
	   -D__VCCOREVER__=0x04000000 -U__unix__ -U__linux__ #-DNDEBUG

AFLAGS	+= $(ARCH) $(DEFINE) $(INCLUDE) $(OPTIMIZE)
CFLAGS	+= $(ARCH) -Wall -fsigned-char -ffreestanding $(DEFINE) $(INCLUDE) $(OPTIMIZE) -g

#pizero

VPATH=wpa_supplicant src/common src/crypto src/drivers src/eapol_supp src/eap_common src/eap_peer src/l2_packet src/rsn_supp src/utils

pizero/%.o: %.c
	@echo "  CC    $@"
	@echo "flags " $(CFLAGS)
	@echo "output directory " $(KERNEL)/$(notdir $@) $<
	@$(CC) $(CFLAGS) -std=gnu99 -c -o $(KERNEL)/$(notdir $@) $<

#pi3

pi3/%.o: %.c
	@echo "  CC    $@"
	@echo "flags " $(CFLAGS)
	@echo "output directory " $(KERNEL)/$(notdir $@) $<
	@$(CC) $(CFLAGS) -std=gnu99 -c -o $(KERNEL)/$(notdir $@) $<

#pi4

pi4/%.o: %.c
	@echo "  CC    $@"
	@echo "flags " $(CFLAGS)
	@echo "output directory " $(KERNEL)/$(notdir $@) $<
	@$(CC) $(CFLAGS) -std=gnu99 -c -o $(KERNEL)/$(notdir $@) $<




%.d: %.S
	@$(AS) $(AFLAGS) -M -MG -MT $*.o -MT $@ -MF $@ $<

%.d: %.c
	@$(CC) $(CFLAGS) -M -MG -MT $*.o -MT $@ -MF $@ $<

clean:
	@echo "  CLEAN " `pwd`
	@rm -f *.d *.o *.a *.elf *.lst *.img *.hex *.cir *.map *~ $(EXTRACLEAN)

libwpa_supplicant_pizero.a: ARCH = -DAARCH=32 -mcpu=arm1176jzf-s -marm -mfpu=vfp -mfloat-abi=$(FLOAT_ABI)
libwpa_supplicant_pizero.a: KERNEL=pizero
libwpa_supplicant_pizero.a: $(addprefix pizero/, $(notdir $(OBJS)))
	@echo "Building " $@
	@echo ""
	@echo "  AR    " $(addprefix $(KERNEL)/, $(notdir $(OBJS)))
	@rm -f pizero/libwpa_supplicant_pizero.a
	@$(AR) cr pizero/libwpa_supplicant_pizero.a $(addprefix $(KERNEL)/, $(notdir $(OBJS)))


libwpa_supplicant_pi3.a: ARCH	= -DAARCH=32 -mcpu=cortex-a7 -marm -mfpu=neon-vfpv4 -mfloat-abi=$(FLOAT_ABI)
libwpa_supplicant_pi3.a: KERNEL=pi3
libwpa_supplicant_pi3.a: $(addprefix pi3/, $(notdir $(OBJS)))
	@echo "Building " $@
	@echo ""
	@echo "  AR    " $(addprefix $(KERNEL)/, $(notdir $(OBJS)))
	@rm -f libwpa_supplicant_pi3.a
	@$(AR) cr pi3/libwpa_supplicant_pi3.a $(addprefix $(KERNEL)/, $(notdir $(OBJS)))


libwpa_supplicant_pi4.a: ARCH	= -DAARCH=32 -mcpu=cortex-a72 -marm -mfpu=neon-fp-armv8 -mfloat-abi=$(FLOAT_ABI)
libwpa_supplicant_pi4.a: KERNEL=pi4
libwpa_supplicant_pi4.a: $(addprefix pi4/, $(notdir $(OBJS)))
	@echo "Building " $@
	@echo ""
	@echo "  AR    " $(addprefix $(KERNEL)/, $(notdir $(OBJS)))
	@rm -f libwpa_supplicant_pi4.a
	@$(AR) cr pi4/libwpa_supplicant_pi4.a $(addprefix $(KERNEL)/, $(notdir $(OBJS)))

